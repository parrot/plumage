OVERVIEW
--------

Parrot Plumage (name subject to change) is the future Parrot module
ecosystem.  It will include tools to search metadata, handle dependencies,
install modules, and so forth.

This is the first rough prototype of the toolchain for Parrot Plumage.
The initial overall design document can be found at:

    https://trac.parrot.org/parrot/wiki/ModuleEcosystem

We practice the 'whirlpool' development model, so this design document
could at best be described as "getting us close enough to the sucking
vortex to begin our descent".  We expect to make many changes as we
discover new issues during implementation.


BUILDING
--------

Configure and make as usual, except the configure script must be run using
Parrot's NQP language:

  $ parrot-nqp Configure.nqp
  $ make
  $ make test

If your Parrot does not have a parrot-nqp binary, this is a strong indication
that your Parrot is too old, and you will need to upgrade it before building
Parrot Plumage.


USING
-----

Once built, Plumage is relatively easy to use, especially if you've used
another install tool such as apt-get or yum.  For example, to install
Rakudo (a Perl 6 implementation), run the following command:

  $ ./plumage install rakudo

This will automatically install any dependencies that Rakudo may need.
To see what those dependencies are, try this:

  $ ./plumage showdeps rakudo

To see what other commands and options are available, ask for usage info:

  $ ./plumage usage

If you have any problems, just come by #parrot at irc.parrot.org and ask.
We're happy to help!


CONTRIBUTING
------------

Commit bits are given freely to those who have sent in a signed CLA to the
Parrot project; just ping japhb on #parrot at irc.parrot.org and ask.  If
you prefer, you are welcome to clone the git repository and send patches --
one of us will review them and commit or reply with comments.

With your first patch or commit, please add yourself to the CREDITS file.

To contribute code right now you will want to be familiar with both the
NQP and PIR languages.  Our metadata is stored as JSON, which should be
fairly easy to understand, but currently the Parrot JSON parser is rather
picky, so it helps to be pedantic if it's whining at you.

Our code layout conventions match those in most common use on the Parrot
project, and are all relatively common sense.

Fundamentally, our committer rules boil down to the same ones Parrot uses:

  Rule 1: Don't break the build.
  Rule 2: Increase the awesome.

(chromatic++ for these.)


LICENSE
-------

Parrot Plumage is Copyright (C) 2009, The Parrot Foundation, and is
distributed under the terms of the Artistic License 2.0.  For more
details, see the full text of the license in the file LICENSE.
