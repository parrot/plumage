
our @ARGS;
MAIN();

sub MAIN () {
    load_bytecode('src/lib/Glue.pir');
    say("I am the test harness, bow before me.");
    for @ARGS {
        my $file := slurp($_);
        my $filename := $_;
        my $test_output := Q:PIR {
            .local string cmd
            .local pmc pio
            $P0 = find_lex '$filename'
            $S0 = $P0
            cmd = 'parrot_nqp ' . $S0
            pio = open cmd, 'rp'
            unless pio goto err_qx
            pio.'encoding'('utf8')
            $P0 = pio.'readall'()
            pio.'close'()
            %r = $P0

          err_qx:
            unless pio goto done
            say 'bad shit'
          done:
        };
        my @output    := split("\n",$test_output);
        my @nums      := split('..',@output[0]);
        my $num_tests := @nums[1];
        my $curr_test := 1;
        my $passed    := 0;
        my $failed    := 0;
        for @output {
            my $line := $_;
            say("looking at line: '" ~ $line ~ "'" );
            my @line_parts := split('ok ',$line);

            if (@line_parts[0] == $curr_test) {
                say("passed test " ~ $curr_test);
                $curr_test++;
                $passed++;
            } elsif (@line_parts[0] == 'not') {
                say("failed test " ~ $curr_test);
                $curr_test++;
                $failed++;
            }
        }
        if ($failed) {
            say("FAILED " ~ $failed ~ " tests out of " ~ $curr_test);
        } elsif( $num_tests != $curr_test ) {
            say("Planned to run " ~ $num_tests ~ " tests but ran " ~ $curr_test ~ " tests");
        }
    }
}
